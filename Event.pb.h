// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Event.proto

#ifndef PROTOBUF_Event_2eproto__INCLUDED
#define PROTOBUF_Event_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace Financial {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Event_2eproto();
void protobuf_AssignDesc_Event_2eproto();
void protobuf_ShutdownFile_Event_2eproto();

class Event;

// ===================================================================

class Event : public ::google::protobuf::Message {
 public:
  Event();
  virtual ~Event();
  
  Event(const Event& from);
  
  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();
  
  void Swap(Event* other);
  
  // implements Message ----------------------------------------------
  
  Event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 timestamp() const;
  inline void set_timestamp(::google::protobuf::int64 value);
  
  // required int32 stockId = 2;
  inline bool has_stockid() const;
  inline void clear_stockid();
  static const int kStockIdFieldNumber = 2;
  inline ::google::protobuf::int32 stockid() const;
  inline void set_stockid(::google::protobuf::int32 value);
  
  // required int32 tick = 3;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 3;
  inline ::google::protobuf::int32 tick() const;
  inline void set_tick(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Financial.Event)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_stockid();
  inline void clear_has_stockid();
  inline void set_has_tick();
  inline void clear_has_tick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 stockid_;
  ::google::protobuf::int32 tick_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Event_2eproto();
  friend void protobuf_AssignDesc_Event_2eproto();
  friend void protobuf_ShutdownFile_Event_2eproto();
  
  void InitAsDefaultInstance();
  static Event* default_instance_;
};
// ===================================================================


// ===================================================================

// Event

// required int64 timestamp = 1;
inline bool Event::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Event::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Event::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Event::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Event::timestamp() const {
  return timestamp_;
}
inline void Event::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// required int32 stockId = 2;
inline bool Event::has_stockid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Event::set_has_stockid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Event::clear_has_stockid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Event::clear_stockid() {
  stockid_ = 0;
  clear_has_stockid();
}
inline ::google::protobuf::int32 Event::stockid() const {
  return stockid_;
}
inline void Event::set_stockid(::google::protobuf::int32 value) {
  set_has_stockid();
  stockid_ = value;
}

// required int32 tick = 3;
inline bool Event::has_tick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Event::set_has_tick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Event::clear_has_tick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Event::clear_tick() {
  tick_ = 0;
  clear_has_tick();
}
inline ::google::protobuf::int32 Event::tick() const {
  return tick_;
}
inline void Event::set_tick(::google::protobuf::int32 value) {
  set_has_tick();
  tick_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Financial

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Event_2eproto__INCLUDED
